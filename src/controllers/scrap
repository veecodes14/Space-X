        
//         const { newPassword } = req.body;
//         const authHeader = req.headers.authorization;

//         if (!newPassword || newPassword.length < 8 ) {
//             res.status(400).json({ success: false, message: 'New Password is required and must be at least 8 characters'});
//             return
//         }

//         if (!authHeader || !authHeader.startsWith('Bearer ')) {
//             res.status(401).json({success: false, message: 'Authorization header missing or is invalid.' })
//             return;
//         }

//         // extract temptoken from auth header
//         const tempToken = authHeader.split(" ")[1];

//         let decoded: CustomJwtPayload;

//         try {
//             decoded = jwt.verify(tempToken, JWT_SECRET) as CustomJwtPayload;
//         } catch (err: any) {
//             if (err.name == "TokenExpiredError") {
//                 res.status(401).json({
//                     success: false,
//                     message: "Reset token has expired. Please request for a new OTP.",
//                 });
//                 return;
//             }
//             res.status(400).json({
//                 success: false,
//                 message: "Invalid reset token.",
//             })
//             return;
//         }

//         if (!decoded || !decoded.userId) {
//             res.status(400).json({ error: "Invalid or expired reset password token"})
//             return;
//         }

//         const user = await User.findById(decoded.userId);
//         if (!user) {
//             res.status(404).json({ error: "User not found" });
//             return;
//         }

//         const salt = await bcrypt.genSalt(10);
//         user.password = await bcrypt.hash(newPassword, salt);
//         user.passwordChangedAt = new Date(Date.now());
//         await user.save();

//         // send confirmation email

//         const emailText =
//         ` Hello ${user.name},
//         Your password has been successfully changed.
//         If you did not perform this action, please contact our support team immediately.
    
//         Best Regards, 
//         Space-X Support Team`;

//         await sendEmail({
//             to: user.email,
//             subject: "Password Changed Successfully",
//             text: emailText,
//         });

//         res.status(200).json({
//             success: true,
//             message: "Password reset successfully. You can now login with a new password",

//         })

//     } catch (error: unknown) {
//         console.log({message: "Error resetting password:", error: error});
//         res.status(500).json({success: false, error: "Internal Server Error"});
//         return
//     }
// }